name: Publish
run-name: ${{ github.actor }} - ${{ github.event_name }}
on:
  push:
    tags: 
      - '*.*.*'

jobs:
  # pages:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Set up Python
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: 3.12

  #     - name: Cache tox environment
  #       uses: actions/cache@v3
  #       with:
  #         path: .tox
  #         key: ${{ runner.os }}-tox-${{ hashFiles('**/tox.ini') }}

  #     - name: Install dependencies
  #       run: pip install -r requirements_setup.txt

  #     - name: Build documentation
  #       run: tox -e docs

  #     - name: Move documentation to public
  #       run: mv dist/docs/ public/

  #     - name: Upload documentation
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: documentation
  #         path: public

  build-package:
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/Livenodes
    permissions:
      id-token: write 
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Install build tools
        run: pip install -U pip twine build setuptools wheel pkginfo

      - name: Log Versions
        run: |
          python --version
          pip --version
          pip list

      - name: Build package
        run: python3 -m build

      - name: Show package metadata
        run: |
          echo "Built packages:"
          ls -la dist/
          echo "Package metadata:"
          python -c "import glob,pkginfo; f=glob.glob('dist/*.whl')[0]; w=pkginfo.Wheel(f); print(f'Name: {w.name}\nVersion: {w.version}\nSummary: {w.summary}\nAuthor: {w.author}')"

      # debug: show exactly what ended up in dist/
      - name: List dist/ artifacts
        run: ls -l dist/

      # debug: inspect sdist metadata
      - name: Show sdist PKG-INFO
        run: |
          S=$(ls dist/*.tar.gz)
          echo "→ $S"
          tar -xOzf "$S" --wildcards '*/PKG-INFO' | head -n20

      # debug: inspect wheel metadata
      - name: Show wheel METADATA
        run: |
          W=$(ls dist/*.whl)
          echo "→ $W"
          unzip -p "$W" '*.dist-info/METADATA' | head -n20

      # debug: what version setuptools-git-versioning actually computed
      - name: Dump git-versioning version
        run: |
          pip install setuptools-git-versioning
          python3 - <<'PYCODE'
            import setuptools_git_versioning
            print("git-versioning →", setuptools_git_versioning.get_version())
            PYCODE

      # debug: install the wheel and check ln_studio.__version__
      - name: Smoke-test wheel install
        run: |
          python3 -m pip install dist/*.whl
          python3 - <<'PYCODE'
            import ln_studio
            print("ln_studio.__version__ →", ln_studio.__version__)
            PYCODE

      - name: Check long description
        run: twine check dist/*

      - name: Publish dists to PyPI
        uses: pypa/gh-action-pypi-publish@v1.10.3